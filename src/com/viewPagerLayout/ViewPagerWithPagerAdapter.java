package com.viewPagerLayout;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

/*
 * ViewPager is a layout manager that allows the user to flip left and right through pages of data. 
 * The pages that the view shows are generated by using an implementation of a PagerAdapter.
 */
public class ViewPagerWithPagerAdapter extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		ViewPager myPager = (ViewPager) findViewById(R.id.pager);
		myPager.setAdapter(new MyPagerAdapter());
		myPager.setCurrentItem(1);
	}

//	An implementation of PagerAdapter to populate pages inside the ViewPager
	private class MyPagerAdapter extends PagerAdapter {

		private ViewGroup page1;
		private ViewGroup page2;
		private ViewGroup page3;
		
//		Returns the number of views(pages) available
		public int getCount() {
			return 3;
		}

		public MyPagerAdapter(){
			LayoutInflater inflater = (LayoutInflater) ViewPagerWithPagerAdapter.this.
					getSystemService(Context.LAYOUT_INFLATER_SERVICE);

			page1 = (ViewGroup)inflater.inflate(R.layout.page1, null);
			page2 = (ViewGroup)inflater.inflate(R.layout.page2, null);
			page3 = (ViewGroup)inflater.inflate(R.layout.page3, null);
		}
		
//		Creates the page for the given position. The adapter is responsible for adding the view to the collection
		public Object instantiateItem(ViewGroup collection, int position) {
			switch (position) {
			case 0:
				((ViewPager) collection).addView(page1, 0);
				return page1;
			case 1:
				((ViewPager) collection).addView(page2, 0);
				return page2;
			case 2:
				((ViewPager) collection).addView(page3, 0);
				return page3;
			}
			return super.instantiateItem(collection,position);
		}

//		Remove a page for the given position. The adapter is responsible for removing the view from its container
		@Override
		public void destroyItem(View arg0, int arg1, Object arg2) {
			((ViewPager) arg0).removeView((View) arg2);
		}

//		Determines whether a page View is associated with a specific key object as returned by instantiateItem(ViewGroup, int). 
//		This method is required for a PagerAdapter to function properly.
		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == ((View) arg1);
		}
	}
}	
